//1.(a)Count number of words,letters,digits and other cherecters.(b) Seperates letter,digits and other cherecters.
#include<stdio.h>

char str[100];

int is_digit(char ch){
    if(ch>='0'&&ch<='9') return 1;
    return 0;
}

int is_char(char ch){
    if(ch>='A'&&ch<='Z') return 1;
    if(ch>='a'&&ch<='z') return 1;
    return 0;
}

int is_vowel(char ch){
    if(ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u'||ch=='A'||ch=='E'||ch=='I'||ch=='O'||ch=='U') return 1;
    return 0;
}


void count(){

    int cnt=1,letter_cnt=0,digit_count=0, others = 0,i,j,k,x,y;
    for(i=0;str[i];i++){
        if(str[i]==' '&&(is_char(str[i+1])||is_digit(str[i+1]))){
           cnt++;
        }
        if(is_char(str[i])){
            letter_cnt++;
        }
        if(is_digit(str[i])){
            digit_count++;
        }
        if(!is_digit(str[i])&&!is_char(str[i])){
            others++;
        }
    }
    printf("\n\nNumbers of words : %d\n",cnt);
    printf("Numbers of letters : %d\n",letter_cnt);
    printf("Numbers of digit : %d\n",digit_count);
    printf("Numbers of Other char : %d\n",others);
}


char letters[100],digits[100],others[100];
int inl=0,ind=0,ino=0;
int markl[300],markd[300],marko[300];

void separate(){

    int i,j,k,x,y;

    for(i=0;str[i];i++){
        x = (int)str[i];
        if(is_char(str[i])&&!markl[x]){
            letters[inl++] = str[i];
            letters[inl++] = ' ';
            markl[x] = 1;
        }
        if(is_digit(str[i])&&!markd[x]){
            digits[ind++] = str[i];
            digits[ind++] = ' ';
            markd[x] = 1;
        }
        if(!is_digit(str[i])&&!is_char(str[i])&&!marko[x]){
            others[ino++] = str[i];
            others[ino++] = ' ';
            marko[x] = 1;
        }
    }
    letters[inl] = '\0';
    digits[ind] = '\0';
    others[ino] = '\0';

    printf("\n\nSeparated letters : %s\n",letters);
    printf("Separated digits : %s\n",digits);
    printf("Separated others : %s\n",others);
}



char id_str[100];
int idin=0;

void put_id(){

    int i,j,k,l,m,n,x,y;
    printf("\n\nID :  ");
    for(i=0;str[i];i++){
        int cnt=0,cn=0;
        if(i==0||str[i]==' '){
            if(str[i]==' ') i++;
            for(j=i;str[j];j++){
                if(is_digit(str[j])) cnt++;
                if(str[j] == ' ') break;
                cn++;
            }
            if(cn==cnt){
                printf("<");
                for(j=i;str[j];j++){
                    if(is_digit(str[j])) printf("%c",str[j]);
                }
                printf(">");
            }
            else printf(" <id> ");
            i = j-1;
        }
    }
    printf("\n\n");
}


/// Md.Shuvo, Part-3, 2022

int main(){

    int i,j,k,l,m,n;

    freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);

    scanf(" %[^\n]",str);

    count();
    separate();
    put_id();
    return 0;
}
// C program to count the number of
// vowels and consonants in a string

#include <stdio.h>
void count_vowels_and_consonant(char* str)
{
    int vowels = 0, consonants = 0;

    int i;
    char ch;
    for (i = 0; str[i] != '\0'; i++) {
        ch = str[i];
        if (ch == 'a' || ch == 'e'
            || ch == 'i' || ch == 'o'
            || ch == 'u' || ch == 'A'
            || ch == 'E' || ch == 'I'
            || ch == 'O' || ch == 'U')
            vowels++;
        else if (ch == ' ')
            continue;

        else
            consonants++;
    }
    printf("\nVowels: %d", vowels);
    printf("\nConsonants: %d", consonants);
}

// Driver function.
int main()
{
    char* str = "I Love Bangladesh";
    printf("String: %s", str);

    count_vowels_and_consonant(str);

    return 0;
}

//2.(a+b+c)Integervariable ShortInt Number,LongInt Number,Undefined

#include<bits/stdc++.h>
using namespace std;

char str[100];

bool isother(){
    for(int i=0;str[i];i++){
        if((str[i]>='a'&&str[i]<='z')||(str[i]>='A'&&str[i]<='Z')||(str[i]>='0'&&str[i]<='9')){
            continue;
        }
        else{
            return 1;
        }
    }
    return 0;
}

bool isAllDigit(){
    for(int i=0; str[i];i++){
        if(str[i]<'0'||str[i]>'9') return 0;
    }
    return 1;
}

int main(){

    cin>>str;

    int ln = strlen(str);

    if(isother()){
        puts("Undefined");
    }
    else if((str[0]>='i'&&str[0]<='n')||(str[0]>='I'&&str[0]<='N')){
        puts("Integer Variable");
    }
    else if(isAllDigit()&&(str[0]>='1'&&str[0]<='9')&&ln<=4){
        puts("Short Integer");
    }
    else if(isAllDigit()&&(str[0]>='1'&&str[0]<='9')){
        puts("Long Integer");
    }
    else{
        puts("Undefined");
    }

    return 0;
}

//2.(d+e+f) Float variable, Float number,Double Number
#include<bits/stdc++.h>
using namespace std;

char str[100];

bool isother(){
    for(int i=0;str[i];i++){
        if((str[i]>='a'&&str[i]<='z')||(str[i]>='A'&&str[i]<='Z')||(str[i]>='0'&&str[i]<='9')||str[i]=='.'){
            continue;
        }
        else{
            return 1;
        }
    }
    return 0;
}

int isFloat(){
    int cn=0,i;
    for(i=0;str[i]!='.';i++){
        if(str[i]=='.')continue;
        if(str[i]<'0'||str[i]>'9') return 0;
    }
    for(i++;str[i];i++){
        if(str[i]<'0'||str[i]>'9') return 0;
        cn++;
    }
    return cn;
}

int main(){

    cin>>str;

    int ln = strlen(str);

    if(isother()){
        puts("Undefined");
    }
    else if((str[0]>='a'&&str[0]<='h')||(str[0]>='A'&&str[0]<='H')||(str[0]>='o'&&str[0]<='z')||(str[0]>='O'&&str[0]<='Z')){
        puts("Float Variable");
    }
    else if((isFloat()==2||isFloat()==1)&&((str[0]>='1'&&str[0]<='9')||str[0]=='.')){
        //printf("%d\n",isFloat());
        puts("Float Number");
    }
    else if(isFloat()>2&&(str[0]>='1'&&str[0]<='9'||str[0]=='.')){
        puts("Double Number");
    }
    else{
        puts("Undefined");
    }

    return 0;
}

//Program for Keyword,Identifier,Operator,constant
#include<bits/stdc++.h>
using namespace std;

string keywords[32]={"auto","double","int","struct","break","else","long",
       "switch","case","enum","register","typedef","char",
       "extern","return","union","const","float","short",
       "unsigned","continue","for","signed","void","default",
       "goto","sizeof","voltile","do","if","static","while"};


bool iskeyword(string st){
    for(int i = 0;i<32; i++){
        if(keywords[i]==st) return 1;
    }
    return 0;
}

bool isother(string str){
    for(int i=0;i<str.size();i++){
        if(str[i]=='_'||str[i]=='.') continue;
        if((str[i]>='a'&&str[i]<='z')||(str[i]>='A'&&str[i]<='Z')||(str[i]>='0'&&str[i]<='9')){
            continue;
        }
        else{
            return 1;
        }
    }
    return 0;
}

int number(string str){
    int cn = 0;
    for(int i =0; i<str.size();i++){
        if(str[i]=='.'){
            cn++;
        }
        else if(!isdigit(str[i])){
            return -1;
        }
    }
    if(cn==1) return 2;
    if(cn==0) return 1;
    return 0;
}

bool isarithmetic(string ch){
    if(ch=="+"||ch=="-"||ch=="*"||ch=="/"||ch=="%"||ch=="^"||ch=="=") return 1;
    return 0;
}

bool isrelational(string st){
    if(st=="<"||st==">"||st=="!="||st=="=="||st=="<="||st==">=") return 1;
    return 0;
}


void checker(string str){

    if(isother(str)&&!isarithmetic(str)&&!isrelational(str)){
            puts("Undefined");
        }
        else if(iskeyword(str)){
            puts("Keyword");
        }
        else if(str[0]=='_'||isalpha(str[0])){
            puts("Identifier");
        }
        else if(isarithmetic(str)){
            puts("Arithmetic Op");
        }
        else if(isrelational(str)){
            puts("Relational Op");
        }
        else{
            int x = number(str);
            if(x==-1){
                puts("Undefined");
            }
            else if(x==1){
                puts("Integer");
            }
            else if(x==2){
                puts("Float");
            }
            else{
                puts("Undefined");
            }
        }
}


int main(){

    string str;

    //freopen("detector.cpp","r",stdin);

    while(cin>>str){
        cout<<str<<" ";
        checker(str);
    }
    return 0;
}
 
//4.Write a program to generate a syntex tree for the sentense a+b*c with the following grammer :

#include<bits/stdc++.h>
using namespace std;

char str[1000],tr[1000];
char gr[][10] = {"E+E","E-E","E*E","E/E","(E)","a","b","c"};

void replac(int pos,char st[]){
    int i;
    for(i=0;st[i];i++){
        tr[pos+i] = st[i];
    }
    tr[pos+i] = '\0';
}

int main(){
    int i,j,ln,op;
    cin>>str;
    strcpy(tr,"E");
    ln = strlen(str);
    puts("E");
    for(i=0,j=0;i<ln;){
            if(i+1<ln){
            if(str[i+1]=='+') op = 0;
            else if(str[i+1]=='-') op = 1;
            else if(str[i+1]=='*') op = 2;
            else op =3;
            replac(j,gr[op]);
            puts(tr);
        }
        tr[j] = str[i];
        puts(tr);
        j += 2;
        i += 2;
    }

    return 0;
}

//5. Write a program which checks a validity of c++ expression derived by the following grammer : 2+3*5=valid
2+*3*5=invalid.

#include<bits/stdc++.h>
#define P(X) cout<<X<<endl;
#define P2(X,Y) cout<<X<<" "<<Y<<endl;
using namespace std;

bool isArithmetic(char ch){
    if (ch == '+' || ch == '-' || ch == '*' || ch=='/')
        return true ;
    else
        return false ;
}

bool check(string s){
    stack<char>st;
    int cnt = 0, len = s.size();
    if(isArithmetic(s[len-1])) return 0;
    for(int i=0; i<len-1; i++){

        if(isArithmetic(s[i]) && ( s[i+1] == ')' || isArithmetic(s[i+1]))) return 0;
        if(s[i]=='(' && (s[i+1]==')'|| isArithmetic(s[i+1]))) return 0;
        if(s[i]==')' && (s[i+1]=='('|| isalpha(s[i+1]) || isdigit(s[i+1]))) return 0;

        if(s[i]=='(')st.push('(');
        if(s[i]==')'){
            if(st.empty()) return 0;
            st.pop();
        }
    }

    if(s[len-1]=='(') st.push('(');
    if(s[len-1]==')') {
        if(st.empty()) return 0;
        st.pop();
    }

    if(st.empty()) return 1;
    return 0;
}

int main()
{
    string s;
    cout<<"Enter a string: ";
    cin>>s;

    int len = s.size(), cnt = 0;
    for(int i=0; i<len; i++){
        if(isArithmetic(s[i]) || isalpha(s[i]) || isdigit(s[i]) || s[i]=='(' || s[i]==')') cnt++;
        if(i+1<len){
            if(isArithmetic(s[i])){
                if(isdigit(s[i+1])){
                    for(int j=i+1;j<len&&!isArithmetic(s[j])&&s[i]!='('&&s[i]!=')';j++){
                        if(!isdigit(s[i])){
                            //puts("Invalid");
                            //return 0;
                        }
                    }
                }
            }
        }
    }

    //cout<<len<<" "<<cnt<<endl;
    if(len != cnt) {
        cout<<"Output: INVALID\n";
        return 0;
    }

    if(check(s)) cout<<"Output: VALID\n";
    else cout<<"Output: INVALID\n";

    return 0;
}

